{"version":3,"sources":["components/Navigation/Navigation.js","components/Singin/Singin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceDetection/FaceDetection.js","App.js","serviceWorker.js","index.js","components/Logo/Logo.jpg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Singin","id","htmlFor","type","name","value","href","Register","Logo","options","max","height","width","paddingTop","alt","src","brain","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","FaceDetection","imageURL","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesParams","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","err","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8fd548ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signedout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Singin = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"email\"\r\n                                name=\"email-address\"\r\n                                id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input\r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\"\r\n                            value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('Register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Singin;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"type=\"text\"name=\"name\"id=\"name\" />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"type=\"email\"name=\"email-address\"id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input\r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\"\r\n                            value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './Logo.jpg';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 45 }} style={{ height: 180, width: 250 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img style={{paddingTop: '5px'}} alt='Logo' src={brain}></img>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Stefan, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#4'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Program will detect faces in your pictures! Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='pa4 br3 shadow-5 form center form'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                    onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Component } from 'react';\r\nimport './FaceDetection.css';\r\n\r\nconst FaceDetection = ({ imageURL, box }) => {\r\n    //console.log('check', imageURL)\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='' src={imageURL} width='500px' height='auto' />\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol,}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceDetection;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Singin from './components/Singin/Singin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceDetection from './components/FaceDetection/FaceDetection';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '0284d93eb8ce4b85a49c868dba583df2'\n})\n\nconst particlesParams = {\n  particles: {\n    number: {\n      value: 10,\n      density: {\n        enable: true,\n        value_area: 80\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    //console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageURL: this.state.input });\n    console.log('click');\n    app.models.predict(\n      // \"a403429f2ddf4b49b307e318f00e528b\",\n      Clarifai.FACE_DETECT_MODEL,\n      //\"https://samples.clarifai.com/face-det.jpg\")\n      this.state.input)\n      .then(response => {\n        //console.log(response);\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      },\n        function (err) {\n          // there was an error\n        }\n      );\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signedout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n  }\n    this.setState({ route: route })\n  }\n\n  render() {\n    //  const{isSignedIn, ImageURL, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesParams} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === 'home'\n          ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceDetection box={this.state.box} imageURL={this.state.imageURL} />\n          </div>\n          : (\n            this.state.route === 'signin' \n            ? <Singin onRouteChange={this.onRouteChange} />\n            : <Register onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.fe8a8c38.jpg\";"],"sourceRoot":""}